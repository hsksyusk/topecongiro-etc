serverinfo {
	name = "topecongiro.com";
	sid = "392";
	description = "IRC server on topecongiro.com";
	network_name = "MyNet";
	network_desc = "This is My Network";
	hub = no;
	max_clients = 512;
	rsa_private_key_file = "/etc/ircd/rsa.key";
	ssl_certificate_file = "/etc/ircd/cert.pem";
	ssl_server_protocol = sslv3, tlsv1;
};

admin {
	name = "Smurf target";
	description = "Main Server Administrator";
	email = "<ircadmin@topecongiro.com>";
};

log {
	use_logging = yes;
	fname_userlog = "/var/log/ircd/logs/userlog";
	fname_operlog = "/var/log/ircd/logs/operlog";
	fname_killlog = "/var/log/ircd/logs/kill";
	fname_klinelog = "/var/log/ircd/logs/kline";
	fname_glinelog = "/var/log/ircd/logs/gline";

	log_level = L_INFO;
};

class {
	name = "users";
	ping_time = 90 seconds;
	number_per_ip = 2;
	max_local = 2;
	max_global = 10;
	max_number = 100;
	cidr_bitlen_ipv4 = 24;
	cidr_bitlen_ipv6 = 120;
	number_per_cidr = 16;
	sendq = 100 kbytes;
};


listen {
	port = 6667;

	flags = ssl;
	port = 6697;
};

auth {
	user = "*@*";
	class = "users";
	#flags = need_ident;
	#encrypted = yes;
};

/*
 * general {}:  The general block contains many of the options that were once
 * compiled in options in config.h.  The general block is read at start time.
 */
general {
	/* max_watch: maximum WATCH entries a client can have. */
	max_watch = 60;

	/*
	 * gline_min_cidr: the minimum required length of a CIDR bitmask
	 * for IPv4 based glines
	 */
	gline_min_cidr = 16;

	/*
	 * gline_min_cidr6: the minimum required length of a CIDR bitmask
	 * for IPv6 based glines
	 */
	gline_min_cidr6 = 48;

	/*
	 * Whether to automatically set mode +i on connecting users.
	 */
	invisible_on_connect = yes;

	/*
	 * If you don't explicitly specify burst_away in your connect blocks, then
	 * they will default to the burst_away value below.
	 */
	burst_away = no;

	/*
	 * Show "actually using host <ip>" on /whois when possible.
	 */
	use_whois_actually = yes;

	/*
	 * Max time from the nickname change that still causes KILL
	 * automatically to switch for the current nick of that user.
	 */
	kill_chase_time_limit = 90 seconds;

	/*
	 * If hide_spoof_ips is disabled, opers will be allowed to see the real IP of spoofed
	 * users in /trace etc.  If this is defined they will be shown a masked IP.
	 */
	hide_spoof_ips = yes;

	/*
	 * Ignore bogus timestamps from other servers.  Yes, this will desync
	 * the network, but it will allow chanops to resync with a valid non TS 0
	 *
	 * This should be enabled network wide, or not at all.
	 */
	ignore_bogus_ts = no;

	/*
	 * disable_auth: completely disable ident lookups; if you enable this,
	 * be careful of what you set need_ident to in your auth {} blocks
	 */
	disable_auth = no;

	/* disable_remote_commands: disable users doing commands on remote servers */
	disable_remote_commands = no;

	/*
	 * tkline_expire_notices: enables or disables temporary kline/xline
	 * expire notices.
	 */
	tkline_expire_notices = no;

	/*
	 * default_floodcount: the default value of floodcount that is configurable
	 * via /quote set floodcount.  This is the amount of lines a user
	 * may send to any other user/channel in one second.
	 */
	default_floodcount = 10;

	/*
	 * failed_oper_notice: send a notice to all opers on the server when 
	 * someone tries to OPER and uses the wrong password, host or ident.
	 */
	failed_oper_notice = yes;

	/*
	 * dots_in_ident: the amount of '.' characters permitted in an ident
	 * reply before the user is rejected.
	 */
	dots_in_ident = 2;

	/*
	 * min_nonwildcard: the minimum non wildcard characters in k/d/g lines
	 * placed via the server.  klines hand placed are exempt from limits.
	 * wildcard chars: '.' ':' '*' '?' '@' '!' '#'
	 */
	min_nonwildcard = 4;

	/*
	 * min_nonwildcard_simple: the minimum non wildcard characters in 
	 * gecos bans.  wildcard chars: '*' '?' '#'
	 */
	min_nonwildcard_simple = 3;

	/* max_accept: maximum allowed /accept's for +g usermode */
	max_accept = 20;

	/* anti_nick_flood: enable the nickflood control code */
	anti_nick_flood = yes;

	/* nick flood: the nick changes allowed in the specified period */
	max_nick_time = 20 seconds;
	max_nick_changes = 5;

	/*
	 * anti_spam_exit_message_time: the minimum time a user must be connected
	 * before custom quit messages are allowed.
	 */
	anti_spam_exit_message_time = 5 minutes;

	/*
	 * ts delta: the time delta allowed between server clocks before
	 * a warning is given, or before the link is dropped.  all servers
	 * should run ntpdate/rdate to keep clocks in sync
	 */
	ts_warn_delta = 30 seconds;
	ts_max_delta = 5 minutes;

	/*
	 * kline_with_reason: show the user the reason why they are k/d/glined 
	 * on exit.  May give away who set k/dline when set via tcm.
	 */
	kline_with_reason = yes;

	/*
	 * kline_reason: show this message to users on channel
	 * instead of the oper reason.
	 */
	kline_reason = "Connection closed";

	/*
	 * reject_hold_time: wait this amount of time before disconnecting
	 * a rejected client. Use 0 to disable.
	 */
	reject_hold_time = 0;

	/*
	 * warn_no_nline: warn opers about servers that try to connect but
	 * we don't have a connect {} block for.  Twits with misconfigured 
	 * servers can get really annoying with this enabled.
	 */
	warn_no_nline = yes;

	/*
	 * stats_e_disabled: set this to 'yes' to disable "STATS e" for both
	 * operators and administrators.  Doing so is a good idea in case
	 * there are any exempted (exempt{}) server IPs you don't want to
	 * see leaked.
	 */
	stats_e_disabled = no;

	/* stats_o_oper only: make stats o (opers) oper only */
	stats_o_oper_only = yes;

	/* stats_P_oper_only: make stats P (ports) oper only */
	stats_P_oper_only = yes;

	/*
	 * stats i oper only: make stats i (auth {}) oper only. set to:
	 *     yes:    show users no auth blocks, made oper only.
	 *     masked: show users first matching auth block
	 *     no:     show users all auth blocks.
	 */
	stats_i_oper_only = yes;

	/*
	 * stats_k_oper_only: make stats k/K (klines) oper only.  set to:
	 *     yes:    show users no auth blocks, made oper only
	 *     masked: show users first matching auth block
	 *     no:     show users all auth blocks.
	 */
	stats_k_oper_only = yes;

	/*
	 * caller_id_wait: time between notifying a +g user that somebody
	 * is messaging them.
	 */
	caller_id_wait = 1 minute;

	/*
	 * opers_bypass_callerid: allows operators to bypass +g and message
	 * anyone who has it set (useful if you use services).
	 */
	opers_bypass_callerid = no;

	/*
	 * pace_wait_simple: time between use of less intensive commands
	 * (ADMIN, HELP, (L)USERS, VERSION, remote WHOIS)
	 */
	pace_wait_simple = 1 second;

	/*
	 * pace_wait: time between more intensive commands
	 * (INFO, LINKS, LIST, MAP, MOTD, STATS, WHO, wildcard WHOIS, WHOWAS)
	 */
	pace_wait = 10 seconds;

	/*
	 * short_motd: send clients a notice telling them to read the motd
	 * instead of forcing a motd to clients who may simply ignore it.
	 */
	short_motd = no;

	/*
	 * ping_cookie: require clients to respond exactly to a ping command,
	 * can help block certain types of drones and FTP PASV mode spoofing.
	 */
	ping_cookie = no;

	/* no_oper_flood: increase flood limits for opers. */
	no_oper_flood = yes;

	/*
	 * true_no_oper_flood: completely eliminate flood limits for opers
	 * and for clients with can_flood = yes in their auth {} blocks
	 */
	true_no_oper_flood = yes;

	/* oper_pass_resv: allow opers to over-ride RESVs on nicks/channels */
	oper_pass_resv = yes;

	/*
	 * idletime: the maximum amount of time a user may idle before
	 * they are disconnected
	 */
	idletime = 0;

	/* REMOVE ME.  The following line checks you've been reading. */
	#havent_read_conf = 1;

	/*
	 * max_targets: the maximum amount of targets in a single 
	 * PRIVMSG/NOTICE.  Set to 999 NOT 0 for unlimited.
	 */
	max_targets = 4;

	/*
	 * client_flood: maximum amount of data in a clients queue before
	 * they are dropped for flooding.
	 */
	client_flood = 2560 bytes;

	/*
	 * message_locale: the default message locale
	 * Use "standard" for the compiled in defaults.
	 * To install the translated messages, go into messages/ in the
	 * source directory and run `make install'.
	 */
	message_locale = "standard";

	/*
	 * usermodes configurable: a list of usermodes for the options below
	 *
	 * +b - bots         - See bot and drone flooding notices
	 * +c - cconn        - Client connection/quit notices
	 * +C - cconn_full   - Client connection/quit notices full
	 * +D - deaf         - Don't receive channel messages
	 * +d - debug        - See debugging notices
	 * +f - full         - See I: line full notices
	 * +G - softcallerid - Server Side Ignore for users not on your channels
	 * +g - callerid     - Server Side Ignore (for privmsgs etc)
	 * +i - invisible    - Not shown in NAMES or WHO unless you share a 
	 *                     a channel
	 * +k - skill        - See server generated KILL messages
	 * +l - locops       - See LOCOPS messages
	 * +n - nchange      - See client nick changes
	 * +r - rej          - See rejected client notices
	 * +s - servnotice   - See general server notices
	 * +u - unauth       - See unauthorized client notices
	 * +w - wallop       - See server generated WALLOPS
	 * +x - external     - See remote server connection and split notices
	 * +y - spy          - See LINKS, STATS, TRACE notices etc.
	 * +z - operwall     - See oper generated WALLOPS
	 */

	/* oper_only_umodes: usermodes only opers may set */
	oper_only_umodes = bots, cconn, cconn_full, debug, full, skill,
                           nchange, rej, spy, external, operwall,
                           locops, unauth;

	/* oper_umodes: default usermodes opers get when they /oper */
	oper_umodes = bots, locops, servnotice, operwall, wallop;

	/*
	 * servlink_path: path to 'servlink' program used by ircd to handle
	 * encrypted/compressed server <-> server links.
	 *
	 * only define if servlink is not in same directory as ircd itself.
	 */
	#servlink_path = "/usr/local/ircd/bin/servlink";

	/*
	 * default_cipher_preference: default cipher to use for cryptlink when none is
	 * specified in connect block.
	 */
	#default_cipher_preference = "BF/168";

	/*
	 * use_egd: if your system does not have *random devices yet you
	 * want to use OpenSSL and encrypted links, enable this.  Beware -
	 * EGD is *very* CPU intensive when gathering data for its pool
	 */
#	use_egd = yes;

	/*
	 * egdpool_path: path to EGD pool. Not necessary for OpenSSL >= 0.9.7
	 * which automatically finds the path.
	 */
#	egdpool_path = "/var/run/egd-pool";


	/*
	 * compression_level: level of compression for compressed links between
	 * servers.  
	 *
	 * values are between: 1 (least compression, fastest)
	 *                and: 9 (most compression, slowest).
	 */
#	compression_level = 6;

	/*
	 * throttle_time: the minimum amount of time between connections from
	 * the same ip.  exempt {} blocks are excluded from this throttling.
	 * Offers protection against flooders who reconnect quickly.  
	 * Set to 0 to disable.
	 */
	throttle_time = 10;
};

modules {
	/*
	 * path: other paths to search for modules specified below
	 * and in /modload.
	 */
	path = "/usr/local/ircd/lib/ircd-hybrid/modules";
	path = "/usr/local/ircd/lib/ircd-hybrid/modules/autoload";

	/* module: the name of a module to load on startup/rehash */
	#module = "some_module.la";
};
